"use strict";(self.webpackChunkai_code_assistant=self.webpackChunkai_code_assistant||[]).push([[24],{24:(e,t,o)=>{o.r(t),o.d(t,{default:()=>u});var a=o(593),i=o(209),n=o(123),s=o(67),l=o.n(s);const d="https://api.xai.com",r=new class{async generateCode(e){return(await l().post(`${d}/generate_code`,{description:e})).data.code}async explainCode(e){return(await l().post(`${d}/explain_code`,{code:e})).data.explanation}},c={id:"ai-code-assistant:plugin",description:"A JupyterLab extension with AI-powered code assistant.",autoStart:!0,optional:[a.ISettingRegistry],requires:[i.ICommandPalette,n.INotebookTracker],activate:(e,t,o,a)=>{console.log("JupyterLab extension jupyterlab_adv is activated!"),t&&t.load(c.id).then((e=>{console.log("jupyterlab_adv settings loaded:",e.composite)})).catch((e=>{console.error("Failed to load settings for jupyterlab_adv.",e)}));const n="ai:generate-code";e.commands.addCommand(n,{label:"Generate Code from Description",execute:()=>{const e=a.currentWidget;e&&async function(e){const t=e.content.activeCell;if(!t||"code"!==t.model.type)return void await(0,i.showDialog)({title:"Error",body:"Please select a code cell.",buttons:[i.Dialog.okButton()]});const o=await i.InputDialog.getText({title:"Generate Code from Description",placeholder:"Enter your description"});if(o.button.accept&&o.value){const e=o.value;try{const o=await r.generateCode(e);t.model.sharedModel.setSource(o)}catch(e){await(0,i.showDialog)({title:"Error",body:`Failed to generate code: ${e.message}`,buttons:[i.Dialog.okButton()]})}}}(e)}}),o.addItem({command:n,category:"AI Assistant"});const s="ai:explain-code";e.commands.addCommand(s,{label:"Explain Selected Code",execute:()=>{const e=a.currentWidget;e&&async function(e){const t=e.content,o=t.activeCell;if(!o||"code"!==o.model.type)return void await(0,i.showDialog)({title:"Error",body:"Please select a code cell.",buttons:[i.Dialog.okButton()]});if(!o.editor)return void await(0,i.showDialog)({title:"Error",body:"No editor available for the selected cell.",buttons:[i.Dialog.okButton()]});const a=o.editor,n=a.editor.state.selection.main,s=n.from!==n.to?a.editor.state.sliceDoc(n.from,n.to):"";if(s)try{const e=await r.explainCode(s);if(!t.model)return void await(0,i.showDialog)({title:"Error",body:"Notebook model is not available.",buttons:[i.Dialog.okButton()]});t.model.sharedModel.insertCell(t.activeCellIndex+1,{cell_type:"markdown",source:e})}catch(e){await(0,i.showDialog)({title:"Error",body:`Failed to explain code: ${e.message}`,buttons:[i.Dialog.okButton()]})}else await(0,i.showDialog)({title:"Error",body:"Please select some code to explain.",buttons:[i.Dialog.okButton()]})}(e)}}),o.addItem({command:s,category:"AI Assistant"})}},u=c}}]);